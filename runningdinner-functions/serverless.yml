# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: geocode-service
# app and org for use with dashboard.serverless.com
app: runningdinner-functions
org: runyourdinner

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  #deploymentBucket:
  #  name: geocode-service-prod-serverlessdeploymentbucket-1m9l8yhnx68z2
  environment:
    BACKEND_BASE_URL: ${self:custom.backendBaseUrl.${opt:stage, self:provider.stage}}
    GOOGLE_MAPS_API_KEY: ${env:GOOGLE_MAPS_API_KEY}
    NODE_TLS_REJECT_UNAUTHORIZED: 0

custom:
  # secrets: ${file(secrets.${sls:stage}.yml)}
  stages:
    - dev
    - prod
  backendBaseUrl:
    dev: 'http://localhost:9090/rest'
    prod: 'https://runyourdinner.eu/rest'

  localstack:
    stages: [dev]
    host: http://127.0.0.1
    debug: true


  serverless-offline-sqs:
    autoCreate: true                 # create queue if not exists
    apiVersion: '2012-11-05'
    # endpoint: http://0.0.0.0:9324
    endpoint: http://localhost:4566
    region: eu-central-1
    # accountId: x
    accountId: 000000000000
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false

  geocodeARN: arn:aws:sqs:eu-central-1:*:geocode
#    dev: arn:aws:sqs:eu-central-1:000000000000:geocode
#    prod: arn:aws:sqs:eu-central-1:*:geocode


# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  update-sqs:
    handler: geocode-service/handlerSqs.update
    events:
      - sqs:
          batchSize: 1
          # arn: ${self:custom.geocodeARN.${opt:stage, self:provider.stage}}
          arn: ${self:custom.geocodeARN}

#  update-http:
#    handler: geocode-service/handlerHttp.update
#    events:
#      - http:
#          path: geocode/{adminId}/participants/{participantId}
#          method: get
#          cors: true

#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

#    Define function environment variables here
#    environment:
#      variable2: value2

package:
  individually: true

plugins:
#  - serverless-plugin-reducer
  # - serverless-localstack
  - serverless-offline-sqs
  - serverless-offline
#  - serverless-secrets-plugin
